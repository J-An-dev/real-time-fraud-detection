/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package creditcard.transaction.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Transaction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Transaction\",\"namespace\":\"creditcard.transaction.avro\",\"fields\":[{\"name\":\"cc_num\",\"type\":\"string\"},{\"name\":\"first\",\"type\":\"string\"},{\"name\":\"last\",\"type\":\"string\"},{\"name\":\"trans_num\",\"type\":\"string\"},{\"name\":\"trans_date\",\"type\":\"string\"},{\"name\":\"trans_time\",\"type\":\"string\"},{\"name\":\"unix_time\",\"type\":\"string\"},{\"name\":\"category\",\"type\":\"string\"},{\"name\":\"merchant\",\"type\":\"string\"},{\"name\":\"amt\",\"type\":\"double\"},{\"name\":\"merch_lat\",\"type\":\"string\"},{\"name\":\"merch_long\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence cc_num;
  @Deprecated public java.lang.CharSequence first;
  @Deprecated public java.lang.CharSequence last;
  @Deprecated public java.lang.CharSequence trans_num;
  @Deprecated public java.lang.CharSequence trans_date;
  @Deprecated public java.lang.CharSequence trans_time;
  @Deprecated public java.lang.CharSequence unix_time;
  @Deprecated public java.lang.CharSequence category;
  @Deprecated public java.lang.CharSequence merchant;
  @Deprecated public double amt;
  @Deprecated public java.lang.CharSequence merch_lat;
  @Deprecated public java.lang.CharSequence merch_long;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Transaction() {}

  /**
   * All-args constructor.
   */
  public Transaction(java.lang.CharSequence cc_num, java.lang.CharSequence first, java.lang.CharSequence last, java.lang.CharSequence trans_num, java.lang.CharSequence trans_date, java.lang.CharSequence trans_time, java.lang.CharSequence unix_time, java.lang.CharSequence category, java.lang.CharSequence merchant, java.lang.Double amt, java.lang.CharSequence merch_lat, java.lang.CharSequence merch_long) {
    this.cc_num = cc_num;
    this.first = first;
    this.last = last;
    this.trans_num = trans_num;
    this.trans_date = trans_date;
    this.trans_time = trans_time;
    this.unix_time = unix_time;
    this.category = category;
    this.merchant = merchant;
    this.amt = amt;
    this.merch_lat = merch_lat;
    this.merch_long = merch_long;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return cc_num;
    case 1: return first;
    case 2: return last;
    case 3: return trans_num;
    case 4: return trans_date;
    case 5: return trans_time;
    case 6: return unix_time;
    case 7: return category;
    case 8: return merchant;
    case 9: return amt;
    case 10: return merch_lat;
    case 11: return merch_long;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: cc_num = (java.lang.CharSequence)value$; break;
    case 1: first = (java.lang.CharSequence)value$; break;
    case 2: last = (java.lang.CharSequence)value$; break;
    case 3: trans_num = (java.lang.CharSequence)value$; break;
    case 4: trans_date = (java.lang.CharSequence)value$; break;
    case 5: trans_time = (java.lang.CharSequence)value$; break;
    case 6: unix_time = (java.lang.CharSequence)value$; break;
    case 7: category = (java.lang.CharSequence)value$; break;
    case 8: merchant = (java.lang.CharSequence)value$; break;
    case 9: amt = (java.lang.Double)value$; break;
    case 10: merch_lat = (java.lang.CharSequence)value$; break;
    case 11: merch_long = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'cc_num' field.
   */
  public java.lang.CharSequence getCcNum() {
    return cc_num;
  }

  /**
   * Sets the value of the 'cc_num' field.
   * @param value the value to set.
   */
  public void setCcNum(java.lang.CharSequence value) {
    this.cc_num = value;
  }

  /**
   * Gets the value of the 'first' field.
   */
  public java.lang.CharSequence getFirst() {
    return first;
  }

  /**
   * Sets the value of the 'first' field.
   * @param value the value to set.
   */
  public void setFirst(java.lang.CharSequence value) {
    this.first = value;
  }

  /**
   * Gets the value of the 'last' field.
   */
  public java.lang.CharSequence getLast() {
    return last;
  }

  /**
   * Sets the value of the 'last' field.
   * @param value the value to set.
   */
  public void setLast(java.lang.CharSequence value) {
    this.last = value;
  }

  /**
   * Gets the value of the 'trans_num' field.
   */
  public java.lang.CharSequence getTransNum() {
    return trans_num;
  }

  /**
   * Sets the value of the 'trans_num' field.
   * @param value the value to set.
   */
  public void setTransNum(java.lang.CharSequence value) {
    this.trans_num = value;
  }

  /**
   * Gets the value of the 'trans_date' field.
   */
  public java.lang.CharSequence getTransDate() {
    return trans_date;
  }

  /**
   * Sets the value of the 'trans_date' field.
   * @param value the value to set.
   */
  public void setTransDate(java.lang.CharSequence value) {
    this.trans_date = value;
  }

  /**
   * Gets the value of the 'trans_time' field.
   */
  public java.lang.CharSequence getTransTime() {
    return trans_time;
  }

  /**
   * Sets the value of the 'trans_time' field.
   * @param value the value to set.
   */
  public void setTransTime(java.lang.CharSequence value) {
    this.trans_time = value;
  }

  /**
   * Gets the value of the 'unix_time' field.
   */
  public java.lang.CharSequence getUnixTime() {
    return unix_time;
  }

  /**
   * Sets the value of the 'unix_time' field.
   * @param value the value to set.
   */
  public void setUnixTime(java.lang.CharSequence value) {
    this.unix_time = value;
  }

  /**
   * Gets the value of the 'category' field.
   */
  public java.lang.CharSequence getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.CharSequence value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'merchant' field.
   */
  public java.lang.CharSequence getMerchant() {
    return merchant;
  }

  /**
   * Sets the value of the 'merchant' field.
   * @param value the value to set.
   */
  public void setMerchant(java.lang.CharSequence value) {
    this.merchant = value;
  }

  /**
   * Gets the value of the 'amt' field.
   */
  public java.lang.Double getAmt() {
    return amt;
  }

  /**
   * Sets the value of the 'amt' field.
   * @param value the value to set.
   */
  public void setAmt(java.lang.Double value) {
    this.amt = value;
  }

  /**
   * Gets the value of the 'merch_lat' field.
   */
  public java.lang.CharSequence getMerchLat() {
    return merch_lat;
  }

  /**
   * Sets the value of the 'merch_lat' field.
   * @param value the value to set.
   */
  public void setMerchLat(java.lang.CharSequence value) {
    this.merch_lat = value;
  }

  /**
   * Gets the value of the 'merch_long' field.
   */
  public java.lang.CharSequence getMerchLong() {
    return merch_long;
  }

  /**
   * Sets the value of the 'merch_long' field.
   * @param value the value to set.
   */
  public void setMerchLong(java.lang.CharSequence value) {
    this.merch_long = value;
  }

  /** Creates a new Transaction RecordBuilder */
  public static creditcard.transaction.avro.Transaction.Builder newBuilder() {
    return new creditcard.transaction.avro.Transaction.Builder();
  }
  
  /** Creates a new Transaction RecordBuilder by copying an existing Builder */
  public static creditcard.transaction.avro.Transaction.Builder newBuilder(creditcard.transaction.avro.Transaction.Builder other) {
    return new creditcard.transaction.avro.Transaction.Builder(other);
  }
  
  /** Creates a new Transaction RecordBuilder by copying an existing Transaction instance */
  public static creditcard.transaction.avro.Transaction.Builder newBuilder(creditcard.transaction.avro.Transaction other) {
    return new creditcard.transaction.avro.Transaction.Builder(other);
  }
  
  /**
   * RecordBuilder for Transaction instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Transaction>
    implements org.apache.avro.data.RecordBuilder<Transaction> {

    private java.lang.CharSequence cc_num;
    private java.lang.CharSequence first;
    private java.lang.CharSequence last;
    private java.lang.CharSequence trans_num;
    private java.lang.CharSequence trans_date;
    private java.lang.CharSequence trans_time;
    private java.lang.CharSequence unix_time;
    private java.lang.CharSequence category;
    private java.lang.CharSequence merchant;
    private double amt;
    private java.lang.CharSequence merch_lat;
    private java.lang.CharSequence merch_long;

    /** Creates a new Builder */
    private Builder() {
      super(creditcard.transaction.avro.Transaction.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(creditcard.transaction.avro.Transaction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.cc_num)) {
        this.cc_num = data().deepCopy(fields()[0].schema(), other.cc_num);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.first)) {
        this.first = data().deepCopy(fields()[1].schema(), other.first);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.last)) {
        this.last = data().deepCopy(fields()[2].schema(), other.last);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.trans_num)) {
        this.trans_num = data().deepCopy(fields()[3].schema(), other.trans_num);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.trans_date)) {
        this.trans_date = data().deepCopy(fields()[4].schema(), other.trans_date);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.trans_time)) {
        this.trans_time = data().deepCopy(fields()[5].schema(), other.trans_time);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.unix_time)) {
        this.unix_time = data().deepCopy(fields()[6].schema(), other.unix_time);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.category)) {
        this.category = data().deepCopy(fields()[7].schema(), other.category);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.merchant)) {
        this.merchant = data().deepCopy(fields()[8].schema(), other.merchant);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.amt)) {
        this.amt = data().deepCopy(fields()[9].schema(), other.amt);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.merch_lat)) {
        this.merch_lat = data().deepCopy(fields()[10].schema(), other.merch_lat);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.merch_long)) {
        this.merch_long = data().deepCopy(fields()[11].schema(), other.merch_long);
        fieldSetFlags()[11] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Transaction instance */
    private Builder(creditcard.transaction.avro.Transaction other) {
            super(creditcard.transaction.avro.Transaction.SCHEMA$);
      if (isValidValue(fields()[0], other.cc_num)) {
        this.cc_num = data().deepCopy(fields()[0].schema(), other.cc_num);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.first)) {
        this.first = data().deepCopy(fields()[1].schema(), other.first);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.last)) {
        this.last = data().deepCopy(fields()[2].schema(), other.last);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.trans_num)) {
        this.trans_num = data().deepCopy(fields()[3].schema(), other.trans_num);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.trans_date)) {
        this.trans_date = data().deepCopy(fields()[4].schema(), other.trans_date);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.trans_time)) {
        this.trans_time = data().deepCopy(fields()[5].schema(), other.trans_time);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.unix_time)) {
        this.unix_time = data().deepCopy(fields()[6].schema(), other.unix_time);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.category)) {
        this.category = data().deepCopy(fields()[7].schema(), other.category);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.merchant)) {
        this.merchant = data().deepCopy(fields()[8].schema(), other.merchant);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.amt)) {
        this.amt = data().deepCopy(fields()[9].schema(), other.amt);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.merch_lat)) {
        this.merch_lat = data().deepCopy(fields()[10].schema(), other.merch_lat);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.merch_long)) {
        this.merch_long = data().deepCopy(fields()[11].schema(), other.merch_long);
        fieldSetFlags()[11] = true;
      }
    }

    /** Gets the value of the 'cc_num' field */
    public java.lang.CharSequence getCcNum() {
      return cc_num;
    }
    
    /** Sets the value of the 'cc_num' field */
    public creditcard.transaction.avro.Transaction.Builder setCcNum(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.cc_num = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'cc_num' field has been set */
    public boolean hasCcNum() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'cc_num' field */
    public creditcard.transaction.avro.Transaction.Builder clearCcNum() {
      cc_num = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'first' field */
    public java.lang.CharSequence getFirst() {
      return first;
    }
    
    /** Sets the value of the 'first' field */
    public creditcard.transaction.avro.Transaction.Builder setFirst(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.first = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'first' field has been set */
    public boolean hasFirst() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'first' field */
    public creditcard.transaction.avro.Transaction.Builder clearFirst() {
      first = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'last' field */
    public java.lang.CharSequence getLast() {
      return last;
    }
    
    /** Sets the value of the 'last' field */
    public creditcard.transaction.avro.Transaction.Builder setLast(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.last = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'last' field has been set */
    public boolean hasLast() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'last' field */
    public creditcard.transaction.avro.Transaction.Builder clearLast() {
      last = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'trans_num' field */
    public java.lang.CharSequence getTransNum() {
      return trans_num;
    }
    
    /** Sets the value of the 'trans_num' field */
    public creditcard.transaction.avro.Transaction.Builder setTransNum(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.trans_num = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'trans_num' field has been set */
    public boolean hasTransNum() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'trans_num' field */
    public creditcard.transaction.avro.Transaction.Builder clearTransNum() {
      trans_num = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'trans_date' field */
    public java.lang.CharSequence getTransDate() {
      return trans_date;
    }
    
    /** Sets the value of the 'trans_date' field */
    public creditcard.transaction.avro.Transaction.Builder setTransDate(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.trans_date = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'trans_date' field has been set */
    public boolean hasTransDate() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'trans_date' field */
    public creditcard.transaction.avro.Transaction.Builder clearTransDate() {
      trans_date = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'trans_time' field */
    public java.lang.CharSequence getTransTime() {
      return trans_time;
    }
    
    /** Sets the value of the 'trans_time' field */
    public creditcard.transaction.avro.Transaction.Builder setTransTime(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.trans_time = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'trans_time' field has been set */
    public boolean hasTransTime() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'trans_time' field */
    public creditcard.transaction.avro.Transaction.Builder clearTransTime() {
      trans_time = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'unix_time' field */
    public java.lang.CharSequence getUnixTime() {
      return unix_time;
    }
    
    /** Sets the value of the 'unix_time' field */
    public creditcard.transaction.avro.Transaction.Builder setUnixTime(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.unix_time = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'unix_time' field has been set */
    public boolean hasUnixTime() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'unix_time' field */
    public creditcard.transaction.avro.Transaction.Builder clearUnixTime() {
      unix_time = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'category' field */
    public java.lang.CharSequence getCategory() {
      return category;
    }
    
    /** Sets the value of the 'category' field */
    public creditcard.transaction.avro.Transaction.Builder setCategory(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.category = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'category' field has been set */
    public boolean hasCategory() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'category' field */
    public creditcard.transaction.avro.Transaction.Builder clearCategory() {
      category = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'merchant' field */
    public java.lang.CharSequence getMerchant() {
      return merchant;
    }
    
    /** Sets the value of the 'merchant' field */
    public creditcard.transaction.avro.Transaction.Builder setMerchant(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.merchant = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'merchant' field has been set */
    public boolean hasMerchant() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'merchant' field */
    public creditcard.transaction.avro.Transaction.Builder clearMerchant() {
      merchant = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'amt' field */
    public java.lang.Double getAmt() {
      return amt;
    }
    
    /** Sets the value of the 'amt' field */
    public creditcard.transaction.avro.Transaction.Builder setAmt(double value) {
      validate(fields()[9], value);
      this.amt = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'amt' field has been set */
    public boolean hasAmt() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'amt' field */
    public creditcard.transaction.avro.Transaction.Builder clearAmt() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'merch_lat' field */
    public java.lang.CharSequence getMerchLat() {
      return merch_lat;
    }
    
    /** Sets the value of the 'merch_lat' field */
    public creditcard.transaction.avro.Transaction.Builder setMerchLat(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.merch_lat = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'merch_lat' field has been set */
    public boolean hasMerchLat() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'merch_lat' field */
    public creditcard.transaction.avro.Transaction.Builder clearMerchLat() {
      merch_lat = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'merch_long' field */
    public java.lang.CharSequence getMerchLong() {
      return merch_long;
    }
    
    /** Sets the value of the 'merch_long' field */
    public creditcard.transaction.avro.Transaction.Builder setMerchLong(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.merch_long = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'merch_long' field has been set */
    public boolean hasMerchLong() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'merch_long' field */
    public creditcard.transaction.avro.Transaction.Builder clearMerchLong() {
      merch_long = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    public Transaction build() {
      try {
        Transaction record = new Transaction();
        record.cc_num = fieldSetFlags()[0] ? this.cc_num : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.first = fieldSetFlags()[1] ? this.first : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.last = fieldSetFlags()[2] ? this.last : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.trans_num = fieldSetFlags()[3] ? this.trans_num : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.trans_date = fieldSetFlags()[4] ? this.trans_date : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.trans_time = fieldSetFlags()[5] ? this.trans_time : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.unix_time = fieldSetFlags()[6] ? this.unix_time : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.category = fieldSetFlags()[7] ? this.category : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.merchant = fieldSetFlags()[8] ? this.merchant : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.amt = fieldSetFlags()[9] ? this.amt : (java.lang.Double) defaultValue(fields()[9]);
        record.merch_lat = fieldSetFlags()[10] ? this.merch_lat : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.merch_long = fieldSetFlags()[11] ? this.merch_long : (java.lang.CharSequence) defaultValue(fields()[11]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
